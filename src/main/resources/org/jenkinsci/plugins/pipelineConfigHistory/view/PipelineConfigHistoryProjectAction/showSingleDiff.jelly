<!--
 ~ The MIT License
 ~
 ~ Copyright (c) 2019, Robin Schulz
 ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy
 ~ of this software and associated documentation files (the "Software"), to deal
 ~ in the Software without restriction, including without limitation the rights
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 ~ copies of the Software, and to permit persons to whom the Software is
 ~ furnished to do so, subject to the following conditions:
 ~
 ~ The above copyright notice and this permission notice shall be included in
 ~ all copies or substantial portions of the Software.
 ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 ~ THE SOFTWARE.
 -->
<?jelly escape-by-default='false'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
    <l:layout title="Pipeline Configuration History">

        <link rel="stylesheet" type="text/css" href="${rootURL}/plugin/pipeline-config-history/css/diff_highlight.css"></link>
        <link rel="stylesheet" type="text/css" href="${rootURL}/plugin/pipeline-config-history/css/style.css"></link>

        <link rel="stylesheet" type="text/css" href="${rootURL}/plugin/pipeline-config-history/highlight.js/styles/xcode.css"/>
        <script src="${rootURL}/plugin/pipeline-config-history/highlight.js/highlight.pack.js"></script>
        <script>hljs.initHighlightingOnLoad();</script>

        <st:include it="${it.project}" page="sidepanel.jelly" />
        <l:main-panel>
            <j:set var="timestamp1" value="${request.getParameter(&quot;timestamp1&quot;)}"/>
            <j:set var="timestamp2" value="${request.getParameter(&quot;timestamp2&quot;)}"/>
            <j:set var="fileHash1" value="${request.getParameter(&quot;fileHash1&quot;)}"/>
            <j:set var="fileHash2" value="${request.getParameter(&quot;fileHash2&quot;)}"/>
            <j:set var="buildXmlDisplayType" value="${request.getParameter(&quot;buildXmlDisplayType&quot;)}"/>

            <j:set var="file1" value="${it.getFileByHashCode(timestamp1, fileHash1)}"/>
            <j:set var="file2" value="${it.getFileByHashCode(timestamp2, fileHash2)}"/>

            <!--get Lines-->
            <j:choose>
                <j:when test="${buildXmlDisplayType.equals(&quot;Jenkinsfile&quot;)}">
                    <j:set var="lines1" value="${it.getScriptFromXmlFile(timestamp1, fileHash1, false)}"/>
                    <j:set var="lines2" value="${it.getScriptFromXmlFile(timestamp2, fileHash2, false)}"/>

                    <j:set var="lines" value="${it.getLines(lines1, lines2)}"/>
                    <j:set var="caption" value="Root Script Diff"></j:set>
                </j:when>
                <j:otherwise>

                    <j:set var="lines" value="${it.getLines(file1, file2)}"/>
                    <j:set var="caption" value="${file1.getName()}-Diff"></j:set>
                </j:otherwise>
            </j:choose>
            <h1>${%Pipeline Configuration History}</h1>

            <table class="center diffTable" style="width:100%">
                <caption>
                    ${caption}
                </caption>
                <thead>
                    <tr>
                        <th colspan="2">
                            <font size="3">
                                Older Change (${it.getTimestampWellFormatted(timestamp1)})
                                <j:if test="${it.isBuiltfromReplay(timestamp1)}">
                                    <br/>
                                    <i>
                                        Replay from build
                                        ${it.getOriginalNumberFromReplayBuild(timestamp1)}
                                    </i>
                                </j:if>
                            </font>
                        </th>
                        <th colspan="2">
                            <font size="3">
                                Newer Change (${it.getTimestampWellFormatted(timestamp2)})
                                <j:if test="${it.isBuiltfromReplay(timestamp2)}">
                                    <br/>
                                    <i>
                                        Replay from build
                                        ${it.getOriginalNumberFromReplayBuild(timestamp2)}
                                    </i>
                                </j:if>
                            </font>
                        </th>
                    </tr>
                </thead>
                <tbody id="tbody_versionDiffsShown">
                    <j:choose>
                        <j:when test="${lines.size() == 0}">
                            <tr>
                                <td colspan="4">
                                    <p>${%No lines changed}</p>
                                </td>
                            </tr>
                        </j:when>
                        <j:otherwise>

                            <j:forEach items="${lines}" var="line">
                                <tr>
                                    <j:choose>
                                        <j:when test="${line.skipping}">
                                            <th class="lineNum">...</th>
                                            <td class="skipping"></td>
                                            <th class="lineNum">...</th>
                                            <td class="skipping"></td>
                                        </j:when>
                                        <j:otherwise>
                                            <th class="lineNum">${line.left.lineNumber}</th>
                                            <td class="${line.left.cssClass}">
                                                <pre>
                                                    <code>
                                                        ${line.left.text}
                                                    </code>
                                                </pre>
                                            </td>
                                            <th class="lineNum">${line.right.lineNumber}</th>
                                            <td class="${line.right.cssClass}">
                                                <pre>
                                                    <code>
                                                        ${line.right.text}
                                                    </code>
                                                </pre>
                                            </td>
                                        </j:otherwise>
                                    </j:choose>
                                </tr>
                            </j:forEach>
                        </j:otherwise>
                    </j:choose>
                </tbody>
            </table>
        </l:main-panel>
    </l:layout>
</j:jelly>
