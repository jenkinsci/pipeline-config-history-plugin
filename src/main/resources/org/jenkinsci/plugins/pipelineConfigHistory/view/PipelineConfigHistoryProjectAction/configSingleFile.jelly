<!--
 ~ The MIT License
 ~
 ~ Copyright (c) 2019, Robin Schulz
 ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy
 ~ of this software and associated documentation files (the "Software"), to deal
 ~ in the Software without restriction, including without limitation the rights
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 ~ copies of the Software, and to permit persons to whom the Software is
 ~ furnished to do so, subject to the following conditions:
 ~
 ~ The above copyright notice and this permission notice shall be included in
 ~ all copies or substantial portions of the Software.
 ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 ~ THE SOFTWARE.
 -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">

    <j:set var="timestamp" value="${request.getParameter(&quot;timestamp&quot;)}"/>
    <j:set var="fileHash" value="${request.getParameter(&quot;fileHash&quot;)}"/>
    <j:set var="fileName" value="${request.getParameter(&quot;fileName&quot;)}"/>
    <j:set var="displayType" value="${request.getParameter(&quot;displayType&quot;)}"/>
    <j:set var="realFile" value="${it.getFileByHashCode(timestamp, fileHash)}"/>

    <j:choose>
        <j:when test="${displayType.equalsIgnoreCase(&quot;raw&quot;)}">
            <!--raw view-->
            <j:out value="${it.getFileContentByHashCode(timestamp, fileHash, false)}"/>

        </j:when>
        <j:when test="${displayType.equalsIgnoreCase(&quot;download&quot;)}">
            <!--raw view-->
            <j:out value="${it.getFileContentByHashCode(timestamp, fileHash, false)}"/>
        </j:when>
        <j:when test="${displayType.equalsIgnoreCase(&quot;Jenkinsfile-raw&quot;)}">
            <!--extract script from build.xml-->
            <j:out value="${it.getScriptFromXmlFile(timestamp, fileHash, false)}"/>
        </j:when>
        <j:otherwise>
            <!--fancy view-->
            <l:layout title="Pipeline Configuration History">
                <st:contentType value="text/html; charset=UTF-8"/>
                <link rel="stylesheet" type="text/css" href="${rootURL}/plugin/pipeline-config-history/highlight.js/styles/xcode.css"/>
                <link rel="stylesheet" type="text/css" href="${rootURL}/plugin/pipeline-config-history/css/style.css"/>
                <script src="${rootURL}/plugin/pipeline-config-history/highlight.js/highlight.pack.js"></script>
                <script>hljs.initHighlightingOnLoad();</script>

                <st:include it="${it.project}" page="sidepanel.jelly" />
                <l:main-panel>
                    <h1>${%Pipeline Configuration History}</h1>

                        <table style="width:100%" class="screenFillingTable pch">
                            <caption>
                                ${it.getProject().getFullName()}: Revision
                                <span class="target">
                                    ${it.getTimestampWellFormatted(timestamp)}
                                    <j:if test="${it.isBuiltfromReplay(timestamp)}">
                                        (Replay from build
                                        ${it.getOriginalNumberFromReplayBuild(timestamp)})
                                    </j:if>
                                </span>
                            </caption>
                            <thead>
                                <tr>
                                    <th>
                                        <j:choose>
                                            <j:when test="${displayType.equalsIgnoreCase(&quot;Jenkinsfile&quot;)}">
                                                ${it.getPipelineHistoryDescription(timestamp).getRootScriptName()} (Root Script)
                                                <br/>
                                                (Src:
                                                ${it.getJenkinsfilePath()})
                                            </j:when>
                                            <j:otherwise>
                                                ${fileName}
                                                <j:if test="${fileName.equals(&quot;build.xml&quot;)}">
                                                    (Root Script Container)
                                                </j:if>
                                            </j:otherwise>
                                        </j:choose>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td style="text-align:left">
                                        <div id="" class="screenFillingDiv resizeWrapper" style="overflow-y:scroll;">
                                            <j:choose>
                                                <j:when test="${displayType.equals(&quot;Jenkinsfile&quot;)}">
                                                    <j:out value="${it.getScriptFromXmlFile(timestamp, fileHash, true)}"/>
                                                </j:when>
                                                <j:otherwise>
                                                    <j:out value="${it.getFileContentByHashCode(timestamp, fileHash, true)}"/>
                                                </j:otherwise>
                                            </j:choose>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                    <j:choose>
                        <j:when test="${realFile.getName().equals(&quot;build.xml&quot;)}">
                            <div align="right" class="downloadArrowWrapper">
                                <a class="download-arrow big" href="configSingleFile?timestamp=${timestamp}&amp;fileHash=${realFile.hashCode()}&amp;fileName=${fileNameDisplayAble}&amp;displayType=Jenkinsfile-raw" download="${it.getPipelineHistoryDescription(timestamp).getRootScriptSimpleName()}">
                                    &#11015;
                                </a>
                            </div>
                        </j:when>
                        <j:otherwise>
                            <div align="right" class="downloadArrowWrapper">
                                <a class="download-arrow big" href="configSingleFile?timestamp=${timestamp}&amp;fileHash=${realFile.hashCode()}&amp;fileName=${fileNameDisplayAble}&amp;displayType=download" download="${realFile.getName()}">
                                    &#11015;
                                </a>
                            </div>
                        </j:otherwise>
                    </j:choose>
                </l:main-panel>
            </l:layout>
        </j:otherwise>
    </j:choose>
</j:jelly>

